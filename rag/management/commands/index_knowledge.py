# rag/management/commands/index_knowledge.py
from django.core.management.base import BaseCommand
from django.conf import settings
from rag.services import IndexingService


class Command(BaseCommand):
    help = '–Ü–Ω–¥–µ–∫—Å—É—î –≤–µ—Å—å –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è RAG —Å–∏—Å—Ç–µ–º–∏'

    def add_arguments(self, parser):
        parser.add_argument(
            '--reindex',
            action='store_true',
            help='–ü–µ—Ä–µ—ñ–Ω–¥–µ–∫—Å—É–≤–∞—Ç–∏ —ñ—Å–Ω—É—é—á—ñ –∑–∞–ø–∏—Å–∏',
        )
        parser.add_argument(
            '--cleanup',
            action='store_true', 
            help='–í–∏–¥–∞–ª–∏—Ç–∏ –∑–∞—Å—Ç–∞—Ä—ñ–ª—ñ embedding\'–∏',
        )
        parser.add_argument(
            '--model',
            type=str,
            help='–Ü–Ω–¥–µ–∫—Å—É–≤–∞—Ç–∏ —Ç—ñ–ª—å–∫–∏ –≤–∫–∞–∑–∞–Ω—É –º–æ–¥–µ–ª—å (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥: services.ServiceCategory)',
        )

    def handle(self, *args, **options):
        indexing_service = IndexingService()
        
        self.stdout.write('üöÄ –ü–æ—á–∏–Ω–∞—î–º–æ —ñ–Ω–¥–µ–∫—Å–∞—Ü—ñ—é –∑–Ω–∞–Ω—å –¥–ª—è RAG...')
        
        if options['cleanup']:
            self.stdout.write('üßπ –û—á–∏—â—É—î–º–æ –∑–∞—Å—Ç–∞—Ä—ñ–ª—ñ embedding\'–∏...')
            deleted = indexing_service.cleanup_orphaned_embeddings()
            self.stdout.write(
                self.style.SUCCESS(f'‚úÖ –í–∏–¥–∞–ª–µ–Ω–æ {deleted} –∑–∞—Å—Ç–∞—Ä—ñ–ª–∏—Ö –∑–∞–ø–∏—Å—ñ–≤')
            )
        
        if options['model']:
            # –Ü–Ω–¥–µ–∫—Å–∞—Ü—ñ—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ—ó –º–æ–¥–µ–ª—ñ
            self.stdout.write(f'üìö –Ü–Ω–¥–µ–∫—Å—É—î–º–æ –º–æ–¥–µ–ª—å {options["model"]}...')
            # TODO: –î–æ–¥–∞—Ç–∏ –ª–æ–≥—ñ–∫—É –¥–ª—è —ñ–Ω–¥–µ–∫—Å–∞—Ü—ñ—ó –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ—ó –º–æ–¥–µ–ª—ñ
        else:
            # –ü–æ–≤–Ω–∞ —ñ–Ω–¥–µ–∫—Å–∞—Ü—ñ—è
            self.stdout.write('üìö –Ü–Ω–¥–µ–∫—Å—É—î–º–æ –≤–µ—Å—å –∫–æ–Ω—Ç–µ–Ω—Ç...')
            total_indexed = indexing_service.index_all_content()
            
            self.stdout.write(
                self.style.SUCCESS(f'‚úÖ –ü—Ä–æ—ñ–Ω–¥–µ–∫—Å–æ–≤–∞–Ω–æ {total_indexed} –∑–∞–ø–∏—Å—ñ–≤')
            )
        
        # –í–∏–≤–æ–¥–∏–º–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        from rag.models import EmbeddingModel
        total_embeddings = EmbeddingModel.objects.filter(is_active=True).count()
        languages = EmbeddingModel.objects.values_list('language', flat=True).distinct()
        categories = EmbeddingModel.objects.values_list('content_category', flat=True).distinct()
        
        self.stdout.write('\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —ñ–Ω–¥–µ–∫—Å–∞—Ü—ñ—ó:')
        self.stdout.write(f'   ‚Ä¢ –ó–∞–≥–∞–ª–æ–º embedding\'—ñ–≤: {total_embeddings}')
        self.stdout.write(f'   ‚Ä¢ –ú–æ–≤–∏: {", ".join(languages)}')
        self.stdout.write(f'   ‚Ä¢ –ö–∞—Ç–µ–≥–æ—Ä—ñ—ó: {", ".join(categories)}')
        
        self.stdout.write(
            self.style.SUCCESS('üéâ –Ü–Ω–¥–µ–∫—Å–∞—Ü—ñ—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø—ñ—à–Ω–æ!')
        )