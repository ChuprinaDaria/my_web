# Generated by Django 4.2.7 on 2025-09-22 09:45

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import pgvector.django.vector


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('services', '0016_remove_service_cta_text_en_and_more'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.RunSQL(
            "CREATE EXTENSION IF NOT EXISTS vector;",
            reverse_sql="DROP EXTENSION IF EXISTS vector;"
        ),
        migrations.CreateModel(
            name='KnowledgeSource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('source_type', models.CharField(choices=[('service', 'Сервіси'), ('project', 'Проєкти'), ('faq', 'FAQ'), ('manual', 'Ручний контент')], max_length=20)),
                ('content_uk', models.TextField()),
                ('content_en', models.TextField(blank=True)),
                ('content_pl', models.TextField(blank=True)),
                ('tags', models.JSONField(default=list)),
                ('priority', models.PositiveIntegerField(default=5, help_text='1=найвищий, 10=найнижчий')),
                ('auto_update', models.BooleanField(default=True, help_text='Автоматично оновлювати embeddings')),
                ('last_embedding_update', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Джерело знань',
                'verbose_name_plural': 'Джерела знань',
                'ordering': ['priority', '-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='RAGAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('total_searches', models.PositiveIntegerField(default=0)),
                ('successful_searches', models.PositiveIntegerField(default=0)),
                ('failed_searches', models.PositiveIntegerField(default=0)),
                ('top_search_categories', models.JSONField(default=dict)),
                ('top_search_queries', models.JSONField(default=list)),
                ('total_ai_cost', models.DecimalField(decimal_places=6, default=0, max_digits=10)),
                ('total_embeddings_generated', models.PositiveIntegerField(default=0)),
                ('total_leads', models.PositiveIntegerField(default=0)),
                ('total_quotes', models.PositiveIntegerField(default=0)),
                ('total_consultations', models.PositiveIntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Аналітика RAG',
                'verbose_name_plural': 'Аналітика RAG',
                'ordering': ['-date'],
                'unique_together': {('date',)},
            },
        ),
        migrations.CreateModel(
            name='ChatSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.CharField(max_length=100, unique=True)),
                ('client_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('client_email', models.EmailField(blank=True, max_length=254)),
                ('client_name', models.CharField(blank=True, max_length=100)),
                ('detected_intent', models.CharField(choices=[('pricing', 'Питання про ціни'), ('services', 'Інфо про сервіси'), ('portfolio', 'Перегляд проєктів'), ('consultation', 'Запис на консультацію'), ('general', 'Загальні питання')], default='general', max_length=50)),
                ('total_messages', models.PositiveIntegerField(default=0)),
                ('total_ai_cost', models.DecimalField(decimal_places=6, default=0, max_digits=10)),
                ('lead_generated', models.BooleanField(default=False)),
                ('quote_requested', models.BooleanField(default=False)),
                ('consultation_requested', models.BooleanField(default=False)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('last_activity', models.DateTimeField(auto_now=True)),
                ('ended_at', models.DateTimeField(blank=True, null=True)),
                ('detected_service_category', models.ForeignKey(blank=True, help_text='AI визначена категорія сервісу', null=True, on_delete=django.db.models.deletion.SET_NULL, to='services.servicecategory')),
            ],
            options={
                'verbose_name': 'Чат сесія',
                'verbose_name_plural': 'Чат сесії',
                'ordering': ['-started_at'],
            },
        ),
        migrations.CreateModel(
            name='ChatMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('user', 'Користувач'), ('assistant', 'AI Консультант'), ('system', 'Система')], max_length=20)),
                ('content', models.TextField()),
                ('rag_sources_used', models.JSONField(blank=True, default=list, help_text='Список джерел для RAG відповіді')),
                ('vector_search_results', models.JSONField(blank=True, default=list)),
                ('ai_model_used', models.CharField(blank=True, max_length=50)),
                ('processing_time', models.FloatField(blank=True, null=True)),
                ('cost', models.DecimalField(decimal_places=6, default=0, max_digits=8)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='rag.chatsession')),
            ],
            options={
                'verbose_name': 'Повідомлення чату',
                'verbose_name_plural': 'Повідомлення чатів',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='EmbeddingModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('embedding', pgvector.django.vector.VectorField(dimensions=768)),
                ('content_text', models.TextField(help_text='Текст, з якого згенерований embedding')),
                ('content_title', models.CharField(blank=True, max_length=500)),
                ('content_category', models.CharField(blank=True, max_length=100)),
                ('language', models.CharField(default='uk', max_length=5)),
                ('tags', models.JSONField(blank=True, default=list)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('model_name', models.CharField(default='gemini-text-embedding', max_length=50)),
                ('embedding_version', models.CharField(default='1.0', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'Векторне представлення',
                'verbose_name_plural': 'Векторні представлення',
                'indexes': [models.Index(fields=['content_type', 'object_id'], name='rag_embeddi_content_da4b17_idx'), models.Index(fields=['content_category', 'language'], name='rag_embeddi_content_fbce0d_idx'), models.Index(fields=['is_active', 'created_at'], name='rag_embeddi_is_acti_b7c9b6_idx')],
                'unique_together': {('content_type', 'object_id', 'language')},
            },
        ),
    ]
