version: '3.8'

services:
  web:
    build: .
    restart: unless-stopped
    environment:
      - DEBUG=False
      - DB_HOST=db
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    env_file:
      - .env
    volumes:
      - media_volume:/app/media
      - static_volume:/app/staticfiles
      - logs_volume:/app/logs
    depends_on:
      - db
      - redis
    networks:
      - lazysoft_network
    expose:
      - "8000"

  nginx:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - media_volume:/var/www/media:ro
      - static_volume:/var/www/static:ro
    depends_on:
      - web
    networks:
      - lazysoft_network

  db:
    image: ankane/pgvector:latest
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - lazysoft_network
    expose:
      - "5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    networks:
      - lazysoft_network
    expose:
      - "6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  celery:
    build: .
    restart: unless-stopped
    command: celery -A lazysoft worker -l info --pool=solo
    environment:
      - DEBUG=False
      - DB_HOST=db
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    env_file:
      - .env
    volumes:
      - logs_volume:/app/logs
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - lazysoft_network

  celery-beat:
    build: .
    restart: unless-stopped
    command: celery -A lazysoft beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    environment:
      - DEBUG=False
      - DB_HOST=db
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    env_file:
      - .env
    volumes:
      - logs_volume:/app/logs
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - lazysoft_network

  fullfeedrss:
    image: "heussd/fivefilters-full-text-rss:latest"
    container_name: lazysoft-fivefilters-prod
    restart: unless-stopped
    environment:
      - FTR_ADMIN_PASSWORD=${FTR_ADMIN_PASSWORD}
    volumes:
      - rss_cache:/var/www/html/cache/rss
    networks:
      - lazysoft_network
    expose:
      - "80"

volumes:
  postgres_data:
  redis_data:
  media_volume:
  static_volume:
  logs_volume:
  rss_cache:

networks:
  lazysoft_network:
    driver: bridge