"""
Django settings for lazysoft project.

Generated by 'django-admin startproject' using Django 4.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
from decouple import config
import os
import logging
import re


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-o(5n4*5i#g!+hzjll*fo@p-60kkq6&cw(x=z%0=m&9olx0xp6f'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Application definition - SINGLE DEFINITION
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sitemaps',
    "django.contrib.sites",
    
    # üì¶ Third party apps
    'parler',
    'ckeditor',
    'ckeditor_uploader',
    
    # üß† Your apps
    'core',
    'blog',
    'news',
    'projects',
    'services',
    'contacts',
    'accounts',
]


SITE_ID = 1

# SINGLE MIDDLEWARE DEFINITION
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',  # For i18n
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'lazysoft.urls'

# SINGLE TEMPLATES DEFINITION
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'lazysoft.wsgi.application'

# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators
#AUTH_PASSWORD_VALIDATORS = [
  #  {
   #     'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    #},
   # {
    #    'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
   # },
   # {
   #     'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
   # },
    #{
    #    'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
   # },
#]

# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

# üåê Multi-language support: UA, PL, EN
LANGUAGES = [
    ('uk', '–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞'),
    ('pl', 'Polski'),
    ('en', 'English'),
]

LANGUAGE_CODE = 'en'  # Default language
USE_I18N = True       # Enable i18n
USE_L10N = True       # Date, time, number formatting according to localization
USE_TZ = True         # Timezone

# üìÅ Path to translation files
LOCALE_PATHS = [BASE_DIR / 'locale']

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/
STATIC_URL = 'static/'

STATICFILES_DIRS = [
    BASE_DIR / 'static',
]

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Parler configuration for multi-language content
PARLER_LANGUAGES = {
    None: (
        {'code': 'uk'},
        {'code': 'pl'},
        {'code': 'en'},
    ),
    'default': {
        'fallbacks': ['uk', 'en'],
        'hide_untranslated': False,
    }
}

MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# CKEditor config
CKEDITOR_UPLOAD_PATH = "uploads/"

CKEDITOR_CONFIGS = {
    'default': {
        'toolbar': 'Full',
        'height': 300,
        'width': '100%',
        'tabSpaces': 4,
        'extraPlugins': ','.join([
            'codesnippet',  # —è–∫—â–æ —Ç—Ä–µ–±–∞ –ø—ñ–¥—Å–≤—ñ—Ç–∫–∞ –∫–æ–¥—É
        ]),
    },
}

# === ü§ñ AI –ù–ê–õ–ê–®–¢–£–í–ê–ù–ù–Ø ===
# AI API –∫–ª—é—á—ñ
GEMINI_API_KEY = config('GEMINI_API_KEY', default=None)
OPENAI_API_KEY = config('OPENAI_API_KEY', default=None)
OPENAI_ORG_ID = config("OPENAI_ORG_ID", default="")          # org_xxx
OPENAI_PROJECT_ID = config("OPENAI_PROJECT_ID", default="") 
# AI –ø–æ–≤–µ–¥—ñ–Ω–∫–∞
AI_PREFERRED_MODEL = config('AI_PREFERRED_MODEL', default='gemini')
AI_BACKUP_MODEL = config('AI_BACKUP_MODEL', default='openai')
AI_MAX_TOKENS = config('AI_MAX_TOKENS', default=2000, cast=int)
AI_TEMPERATURE = config('AI_TEMPERATURE', default=0.7, cast=float)

# === üì± SOCIAL MEDIA API ===
# Telegram
TELEGRAM_BOT_TOKEN = config('TELEGRAM_BOT_TOKEN', default=None)
TELEGRAM_CHAT_ID = config("TELEGRAM_CHAT_ID", default=None)


# Facebook/Instagram
FACEBOOK_ACCESS_TOKEN = config('FACEBOOK_ACCESS_TOKEN', default=None)
FACEBOOK_PAGE_EN = config('FACEBOOK_PAGE_EN', default=None)
FACEBOOK_PAGE_PL = config('FACEBOOK_PAGE_PL', default=None)

# LinkedIn
LINKEDIN_ACCESS_TOKEN = config('LINKEDIN_ACCESS_TOKEN', default=None)

# === üì∞ NEWS SYSTEM –ù–ê–õ–ê–®–¢–£–í–ê–ù–ù–Ø ===
# –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü—ñ—è
NEWS_AUTO_PUBLISH = config('NEWS_AUTO_PUBLISH', default=False, cast=bool)
NEWS_MAX_DAILY_ARTICLES = config('NEWS_MAX_DAILY_ARTICLES', default=20, cast=int)
NEWS_DEFAULT_LANGUAGE = config('NEWS_DEFAULT_LANGUAGE', default='uk')

# RSS –ø–∞—Ä—Å–∏–Ω–≥
RSS_PARSER_USER_AGENT = 'LAZYSOFT-NewsBot/1.0'
RSS_FETCH_TIMEOUT = config('RSS_FETCH_TIMEOUT', default=30, cast=int)
RSS_MAX_ARTICLES_PER_SOURCE = config('RSS_MAX_ARTICLES_PER_SOURCE', default=50, cast=int)

# üìÑ –ü–∞–≥—ñ–Ω–∞—Ü—ñ—è
NEWS_ARTICLES_PER_PAGE = 12
NEWS_RELATED_ARTICLES = 3

# üéØ SEO –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
SITE_URL = 'http://127.0.0.1:8000'
SITE_NAME = 'LAZYSOFT'

# === üîÑ CELERY (–¥–ª—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∏—Ö –∑–∞–≤–¥–∞–Ω—å) ===
# –ü–æ–∫–∏ —â–æ –∑–∞–∫–æ–º–µ–Ω—Ç–æ–≤–∞–Ω–æ - —É–≤—ñ–º–∫–Ω–µ—à –∫–æ–ª–∏ –±—É–¥–µ—à –≥–æ—Ç–æ–≤–∞
# CELERY_BROKER_URL = config('CELERY_BROKER_URL', default='redis://localhost:6379')
# CELERY_RESULT_BACKEND = config('CELERY_RESULT_BACKEND', default='redis://localhost:6379')
# CELERY_ACCEPT_CONTENT = ['application/json']
# CELERY_TASK_SERIALIZER = 'json'
# CELERY_RESULT_SERIALIZER = 'json'
# CELERY_TIMEZONE = 'Europe/Warsaw'

# === üíæ CACHING (–æ–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ) ===
# –ü–æ–∫–∏ —â–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –ª–æ–∫–∞–ª—å–Ω–∏–π –∫–µ—à
CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
        'LOCATION': 'lazysoft-cache',
        'TIMEOUT': 900,  # 15 —Ö–≤–∏–ª–∏–Ω
        'OPTIONS': {
            'MAX_ENTRIES': 1000,
        }
    }
}

# Cache timeouts
CACHE_TIMEOUT_NEWS = config('CACHE_TIMEOUT_NEWS', default=900, cast=int)  # 15 —Ö–≤–∏–ª–∏–Ω
CACHE_TIMEOUT_WIDGETS = config('CACHE_TIMEOUT_WIDGETS', default=300, cast=int)  # 5 —Ö–≤–∏–ª–∏–Ω

class StripEmojiFilter(logging.Filter):
    _EMOJI_RE = re.compile(r'[\U00010000-\U0010FFFF]|\uFE0F|[\u2600-\u26FF]')
    def filter(self, record: logging.LogRecord) -> bool:
        if isinstance(record.msg, str):
            record.msg = self._EMOJI_RE.sub('', record.msg)
        return True

# === üìä –†–û–ó–®–ò–†–ï–ù–ï –õ–û–ì–£–í–ê–ù–ù–Ø ===
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {process:d} {thread:d} {message}',
            'style': '{',
        },
        'simple': {
            'format': '{levelname} {message}',
            'style': '{',
        },
    },
    'filters': {
        'strip_emoji': {
            '()': StripEmojiFilter,
        },
    },
    'handlers': {
        'file': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': BASE_DIR / 'logs' / 'news.log',
            'formatter': 'verbose',
            'encoding': 'utf-8',  # —â–æ–± —É —Ñ–∞–π–ª—ñ –±—É–ª–∏ –µ–º–æ–¥–∑—ñ
        },
        'ai_file': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': BASE_DIR / 'logs' / 'ai_processing.log',
            'formatter': 'verbose',
            'encoding': 'utf-8',  # —â–æ–± —É —Ñ–∞–π–ª—ñ –±—É–ª–∏ –µ–º–æ–¥–∑—ñ
        },
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'simple',
            'filters': ['strip_emoji'],  # –µ–º–æ–¥–∑—ñ —Ä—ñ–∂–µ–º–æ —Ç—ñ–ª—å–∫–∏ –≤ –∫–æ–Ω—Å–æ–ª—ñ
        },
    },
    'loggers': {
        'news': {
            'handlers': ['file', 'console'],
            'level': 'INFO',
            'propagate': True,
        },
        'news.services.ai_processor': {
            'handlers': ['ai_file', 'console'],
            'level': 'INFO',
            'propagate': False,
        },
        'news.services.rss_parser': {
            'handlers': ['file', 'console'],
            'level': 'INFO',
            'propagate': False,
        },
    },
}

# === üîí CORS –î–õ–Ø API (—è–∫—â–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—à —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ –æ–∫—Ä–µ–º–æ) ===
# CORS_ALLOWED_ORIGINS = [
#     "http://localhost:3000",  # React dev server
#     "https://lazysoft.pl",    # Production
# ]
# CORS_ALLOW_CREDENTIALS = True

# === üìà ROI DASHBOARD –ù–ê–õ–ê–®–¢–£–í–ê–ù–ù–Ø ===
ROI_HOURLY_RATE_CONTENT_MANAGER = config('ROI_HOURLY_RATE_CONTENT_MANAGER', default=15, cast=float)
ROI_HOURLY_RATE_SMM_SPECIALIST = config('ROI_HOURLY_RATE_SMM_SPECIALIST', default=12, cast=float)
ROI_HOURLY_RATE_COPYWRITER = config('ROI_HOURLY_RATE_COPYWRITER', default=20, cast=float)

# === üé® AI IMAGE GENERATION (–æ–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ) ===
# DALL_E_API_KEY = config('DALL_E_API_KEY', default=None)
# MIDJOURNEY_API_KEY = config('MIDJOURNEY_API_KEY', default=None)

# === üîê SECURITY –î–û–î–ê–¢–ö–ò –î–õ–Ø PRODUCTION ===
if not DEBUG:
    SECURE_BROWSER_XSS_FILTER = True
    SECURE_CONTENT_TYPE_NOSNIFF = True
    X_FRAME_OPTIONS = 'DENY'
    SECURE_HSTS_SECONDS = 31536000
    SECURE_HSTS_INCLUDE_SUBDOMAINS = True
    SECURE_HSTS_PRELOAD = True

# –°—Ç–≤–æ—Ä—é—î–º–æ –ø–∞–ø–∫–∏ —è–∫—â–æ —ó—Ö –Ω–µ–º–∞—î
os.makedirs(BASE_DIR / 'logs', exist_ok=True)
os.makedirs(BASE_DIR / 'media', exist_ok=True)