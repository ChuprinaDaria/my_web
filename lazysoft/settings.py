"""
Django settings for lazysoft project.

Generated by 'django-admin startproject' using Django 4.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

import os
import locale
import sys

# –§–æ—Ä—Å—É—î–º–æ UTF-8 –∫–æ–¥—É–≤–∞–Ω–Ω—è –¥–ª—è –≤—Å—å–æ–≥–æ –ø—Ä–æ–µ–∫—Ç—É
os.environ['PYTHONIOENCODING'] = 'utf-8'
try:
    locale.setlocale(locale.LC_ALL, 'C.UTF-8')
except locale.Error:
    # Fallback –¥–ª—è Windows
    locale.setlocale(locale.LC_ALL, 'en_US.UTF-8')
sys.stdout.reconfigure(encoding='utf-8')

from pathlib import Path
from decouple import config
import logging
import re

gettext_path = r"C:\Program Files (x86)\GnuWin32\bin"
if os.path.exists(gettext_path):
    os.environ['PATH'] = gettext_path + os.pathsep + os.environ['PATH']
   

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-o(5n4*5i#g!+hzjll*fo@p-60kkq6&cw(x=z%0=m&9olx0xp6f'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["192.168.1.13", "localhost", "127.0.0.1", "testserver"]
CSRF_TRUSTED_ORIGINS = ["http://192.168.1.13:8000"]

# Application definition - SINGLE DEFINITION
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sitemaps',
    "django.contrib.sites",
    "django_ckeditor_5",
    
    # üì¶ Third party apps
    'parler',
    'ckeditor',
    'ckeditor_uploader',
    
    # üéØ CRM apps - –≤–∏–¥–∞–ª–µ–Ω–æ
    # 'crm',
    'django_filters',
    'crispy_forms',
    'crispy_bootstrap5',
    'django_select2',
    'django_extensions',
    
    # üîê 2FA Security - –≤—ñ–¥–∫–ª—é—á–µ–Ω–æ
    # 'django_otp',
    # 'django_otp.plugins.otp_totp',  # Google Authenticator
    # 'two_factor',
    # –æ–ø—Ü—ñ–π–Ω–æ: 'otp_yubikey',
    
    # üß† Your apps
    'core',
    'about',
    'blog',
    'news',
    'projects',
    'services',
    'contacts.apps.ContactsConfig',
    'accounts',
    'consultant',
]


SITE_ID = 2  

# SINGLE MIDDLEWARE DEFINITION
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',  # For i18n
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    # 'django_otp.middleware.OTPMiddleware',  # üîê 2FA Middleware - –≤—ñ–¥–∫–ª—é—á–µ–Ω–æ
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    
    # üñï LINUS SECURITY SYSTEM‚Ñ¢ - –ó–∞—Ö–∏—â–∞—î–º–æ –≤—ñ–¥ —Ö–∞–∫–µ—Ä—ñ–≤!
    'core.middleware.security.LinusSecurityMiddleware',
]

ROOT_URLCONF = 'lazysoft.urls'


# SINGLE TEMPLATES DEFINITION
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.i18n',
                'core.context_processors.seo_settings',
            ],
        },
    },
]

WSGI_APPLICATION = 'lazysoft.wsgi.application'

# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'Lazysoft',       # –Ω–∞–∑–≤–∞ –ë–î, —è–∫—É —Å—Ç–≤–æ—Ä–∏–ª–∞ –≤ pgAdmin
        'USER': 'lazysoft_user',       # —Å–≤—ñ–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á PostgreSQL
        'PASSWORD': 'Severussnape1987?',
        'HOST': 'localhost',      # —è–∫—â–æ –ª–æ–∫–∞–ª—å–Ω–æ
        'PORT': '5432',           # —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∏–π –ø–æ—Ä—Ç PostgreSQL
    }
}

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators
#AUTH_PASSWORD_VALIDATORS = [
  #  {
   #     'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    #},
   # {
    #    'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
   # },
   # {
   #     'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
   # },
    #{
    #    'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
   # },
#]

# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

# üåê Multi-language support: UA, PL, EN
LANGUAGES = [
    ('uk', '–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞'),
    ('pl', 'Polski'),
    ('en', 'English'),
]

LANGUAGE_CODE = 'en'  # Default language
USE_I18N = True       # Enable i18n
USE_L10N = True       # Date, time, number formatting according to localization
USE_TZ = True         # Timezone

# üìÅ Path to translation files
LOCALE_PATHS = [BASE_DIR / 'locale']

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/
STATIC_URL = 'static/'

STATICFILES_DIRS = [
    BASE_DIR / 'static',
]

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Parler configuration for multi-language content
PARLER_LANGUAGES = {
    None: (
        {'code': 'uk'},
        {'code': 'pl'},
        {'code': 'en'},
    ),
    'default': {
        'fallbacks': ['uk', 'en'],
        'hide_untranslated': False,
    }
}

MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# CKEditor config
CKEDITOR_UPLOAD_PATH = "uploads/"

CKEDITOR_CONFIGS = {
    'default': {
        'toolbar': 'Full',
        'height': 300,
        'width': '100%',
        'tabSpaces': 4,
        'extraPlugins': ','.join([
            'codesnippet',  # —è–∫—â–æ —Ç—Ä–µ–±–∞ –ø—ñ–¥—Å–≤—ñ—Ç–∫–∞ –∫–æ–¥—É
        ]),
    },
}


# === üîÑ FIVEFILTERS FULL-TEXT RSS ===
FIVEFILTERS_ENABLED = config('FIVEFILTERS_ENABLED', default=True, cast=bool)
FIVEFILTERS_BASE_URL = config('FIVEFILTERS_BASE_URL', default='http://localhost:8082')  # ‚Üê –¢–≤—ñ–π –ø–æ—Ä—Ç
FIVEFILTERS_TIMEOUT = config('FIVEFILTERS_TIMEOUT', default=30, cast=int)
FIVEFILTERS_MAX_RETRIES = config('FIVEFILTERS_MAX_RETRIES', default=2, cast=int)

# === üñºÔ∏è STOCK IMAGES API ===
UNSPLASH_ACCESS_KEY = config('UNSPLASH_ACCESS_KEY', default=None)
PEXELS_API_KEY = config('PEXELS_API_KEY', default=None)
PIXABAY_API_KEY = config('PIXABAY_API_KEY', default=None)
STOCK_IMAGE_CACHE_TIMEOUT = config('STOCK_IMAGE_CACHE_TIMEOUT', default=2592000, cast=int)  # 30 –¥–Ω—ñ–≤
# === ü§ñ AI –ù–ê–õ–ê–®–¢–£–í–ê–ù–ù–Ø ===
# AI API –∫–ª—é—á—ñ
GEMINI_API_KEY = config('GEMINI_API_KEY', default=None)
OPENAI_API_KEY = config('OPENAI_API_KEY', default=None)
OPENAI_ORG_ID = config("OPENAI_ORG_ID", default="")          # org_xxx
OPENAI_PROJECT_ID = config("OPENAI_PROJECT_ID", default="") 
# AI –ø–æ–≤–µ–¥—ñ–Ω–∫–∞
AI_PREFERRED_MODEL = config('AI_PREFERRED_MODEL', default='gemini')
AI_BACKUP_MODEL = config('AI_BACKUP_MODEL', default='openai')
AI_MAX_TOKENS = config('AI_MAX_TOKENS', default=2000, cast=int)
AI_TEMPERATURE = config('AI_TEMPERATURE', default=0.7, cast=float)

# === üì± SOCIAL MEDIA API ===
# Telegram
TELEGRAM_BOT_TOKEN = config('TELEGRAM_BOT_TOKEN', default=None)
TELEGRAM_CHAT_ID = config("TELEGRAM_CHAT_ID", default=None)


# Facebook/Instagram
FACEBOOK_ACCESS_TOKEN = config('FACEBOOK_ACCESS_TOKEN', default=None)
FACEBOOK_PAGE_EN = config('FACEBOOK_PAGE_EN', default=None)
FACEBOOK_PAGE_PL = config('FACEBOOK_PAGE_PL', default=None)

# LinkedIn
LINKEDIN_ACCESS_TOKEN = config('LINKEDIN_ACCESS_TOKEN', default=None)

# === üì∞ NEWS SYSTEM –ù–ê–õ–ê–®–¢–£–í–ê–ù–ù–Ø ===
# –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü—ñ—è
NEWS_AUTO_PUBLISH = config('NEWS_AUTO_PUBLISH', default=False, cast=bool)
NEWS_MAX_DAILY_ARTICLES = config('NEWS_MAX_DAILY_ARTICLES', default=20, cast=int)
NEWS_DEFAULT_LANGUAGE = config('NEWS_DEFAULT_LANGUAGE', default='uk')

# RSS –ø–∞—Ä—Å–∏–Ω–≥
RSS_PARSER_USER_AGENT = 'LAZYSOFT-NewsBot/1.0'
RSS_FETCH_TIMEOUT = config('RSS_FETCH_TIMEOUT', default=30, cast=int)
RSS_MAX_ARTICLES_PER_SOURCE = config('RSS_MAX_ARTICLES_PER_SOURCE', default=50, cast=int)

# üìÑ –ü–∞–≥—ñ–Ω–∞—Ü—ñ—è
NEWS_ARTICLES_PER_PAGE = 12
NEWS_RELATED_ARTICLES = 3

# üéØ SEO –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
SITE_URL = config('SITE_URL', default='http://127.0.0.1:8000')
SITE_NAME = config('SITE_NAME', default='LAZYSOFT')

# === üìä GOOGLE ANALYTICS ===
GOOGLE_ANALYTICS_ID = config('GOOGLE_ANALYTICS_ID', default=None)
GOOGLE_SITE_VERIFICATION = config('GOOGLE_SITE_VERIFICATION', default=None)
BING_SITE_VERIFICATION = config('BING_SITE_VERIFICATION', default=None)
YAHOO_SITE_VERIFICATION = config('YAHOO_SITE_VERIFICATION', default=None)
DISABLE_GOOGLE_INDEXING = config('DISABLE_GOOGLE_INDEXING', default=True, cast=bool)

# === üîÑ CELERY (–¥–ª—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∏—Ö –∑–∞–≤–¥–∞–Ω—å) ===
# –ü–æ–∫–∏ —â–æ –∑–∞–∫–æ–º–µ–Ω—Ç–æ–≤–∞–Ω–æ - —É–≤—ñ–º–∫–Ω–µ—à –∫–æ–ª–∏ –±—É–¥–µ—à –≥–æ—Ç–æ–≤–∞
# CELERY_BROKER_URL = config('CELERY_BROKER_URL', default='redis://localhost:6379')
# CELERY_RESULT_BACKEND = config('CELERY_RESULT_BACKEND', default='redis://localhost:6379')
# CELERY_ACCEPT_CONTENT = ['application/json']
# CELERY_TASK_SERIALIZER = 'json'
# CELERY_RESULT_SERIALIZER = 'json'
# CELERY_TIMEZONE = 'Europe/Warsaw'

# === üíæ CACHING (–æ–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ) ===
# –ü–æ–∫–∏ —â–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –ª–æ–∫–∞–ª—å–Ω–∏–π –∫–µ—à
CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
        'LOCATION': 'lazysoft-cache',
        'TIMEOUT': 900,  # 15 —Ö–≤–∏–ª–∏–Ω
        'OPTIONS': {
            'MAX_ENTRIES': 1000,
        }
    }
}

# Cache timeouts
CACHE_TIMEOUT_NEWS = config('CACHE_TIMEOUT_NEWS', default=900, cast=int)  # 15 —Ö–≤–∏–ª–∏–Ω
CACHE_TIMEOUT_WIDGETS = config('CACHE_TIMEOUT_WIDGETS', default=300, cast=int)  # 5 —Ö–≤–∏–ª–∏–Ω

class StripEmojiFilter(logging.Filter):
    _EMOJI_RE = re.compile(r'[\U00010000-\U0010FFFF]|\uFE0F|[\u2600-\u26FF]')
    def filter(self, record: logging.LogRecord) -> bool:
        if isinstance(record.msg, str):
            record.msg = self._EMOJI_RE.sub('', record.msg)
        return True

# === üìä –†–û–ó–®–ò–†–ï–ù–ï –õ–û–ì–£–í–ê–ù–ù–Ø ===
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {process:d} {thread:d} {message}',
            'style': '{',
        },
        'simple': {
            'format': '{levelname} {message}',
            'style': '{',
        },
    },
    'filters': {
        'strip_emoji': {
            '()': StripEmojiFilter,
        },
    },
    'handlers': {
        'file': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': BASE_DIR / 'logs' / 'news.log',
            'formatter': 'verbose',
            'encoding': 'utf-8',  # —â–æ–± —É —Ñ–∞–π–ª—ñ –±—É–ª–∏ –µ–º–æ–¥–∑—ñ
        },
        'ai_file': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': BASE_DIR / 'logs' / 'ai_processing.log',
            'formatter': 'verbose',
            'encoding': 'utf-8',  # —â–æ–± —É —Ñ–∞–π–ª—ñ –±—É–ª–∏ –µ–º–æ–¥–∑—ñ
        },
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'simple',
            'filters': ['strip_emoji'],  # –µ–º–æ–¥–∑—ñ —Ä—ñ–∂–µ–º–æ —Ç—ñ–ª—å–∫–∏ –≤ –∫–æ–Ω—Å–æ–ª—ñ
        },
    },
    'loggers': {
        'news': {
            'handlers': ['file', 'console'],
            'level': 'INFO',
            'propagate': True,
        },
        'news.services.ai_processor': {
            'handlers': ['ai_file', 'console'],
            'level': 'INFO',
            'propagate': False,
        },
        'news.services.rss_parser': {
            'handlers': ['file', 'console'],
            'level': 'INFO',
            'propagate': False,
        },
    },
}

# === üîí CORS –î–õ–Ø API (—è–∫—â–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—à —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ –æ–∫—Ä–µ–º–æ) ===
# CORS_ALLOWED_ORIGINS = [
#     "http://localhost:3000",  # React dev server
#     "https://lazysoft.pl",    # Production
# ]
# CORS_ALLOW_CREDENTIALS = True

# === üìà ROI DASHBOARD –ù–ê–õ–ê–®–¢–£–í–ê–ù–ù–Ø ===
ROI_HOURLY_RATE_CONTENT_MANAGER = config('ROI_HOURLY_RATE_CONTENT_MANAGER', default=15, cast=float)
ROI_HOURLY_RATE_SMM_SPECIALIST = config('ROI_HOURLY_RATE_SMM_SPECIALIST', default=12, cast=float)
ROI_HOURLY_RATE_COPYWRITER = config('ROI_HOURLY_RATE_COPYWRITER', default=20, cast=float)

# === üé® AI IMAGE GENERATION (–æ–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ) ===
# DALL_E_API_KEY = config('DALL_E_API_KEY', default=None)
# MIDJOURNEY_API_KEY = config('MIDJOURNEY_API_KEY', default=None)

# === üîê SECURITY –î–û–î–ê–¢–ö–ò –î–õ–Ø PRODUCTION ===
if not DEBUG:
    SECURE_BROWSER_XSS_FILTER = True
    SECURE_CONTENT_TYPE_NOSNIFF = True
    X_FRAME_OPTIONS = 'DENY'
    SECURE_HSTS_SECONDS = 31536000
    SECURE_HSTS_INCLUDE_SUBDOMAINS = True
    SECURE_HSTS_PRELOAD = True

# === üìß EMAIL CONFIGURATION ===
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'serwer2555348.home.pl'
EMAIL_PORT = 587  # –ê–±–æ 465 –¥–ª—è SSL
EMAIL_USE_TLS = True  # True –¥–ª—è –ø–æ—Ä—Ç—É 587
EMAIL_USE_AUTHENTICATION = True  # –î–æ–¥–∞—î–º–æ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—é
# EMAIL_USE_SSL = True  # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π —Ü–µ –∑–∞–º—ñ—Å—Ç—å TLS —è–∫—â–æ –ø–æ—Ä—Ç 465
EMAIL_HOST_USER = 'info@lazysoft.pl'  # –¢–≤–æ—è –ø–æ–≤–Ω–∞ email –∞–¥—Ä–µ—Å–∞
EMAIL_HOST_PASSWORD = config('EMAIL_PASSWORD', default='')  # –ü–∞—Ä–æ–ª—å –∑ .env
DEFAULT_FROM_EMAIL = 'info@lazysoft.pl'
SERVER_EMAIL = DEFAULT_FROM_EMAIL

# –°—Ç–≤–æ—Ä—é—î–º–æ –ø–∞–ø–∫–∏ —è–∫—â–æ —ó—Ö –Ω–µ–º–∞—î
os.makedirs(BASE_DIR / 'logs', exist_ok=True)
os.makedirs(BASE_DIR / 'media', exist_ok=True)

# === üñï LINUS SECURITY SYSTEM‚Ñ¢ ===
LINUS_SECURITY_ENABLED = True
LINUS_TELEGRAM_ALERTS = True
LINUS_LOG_ALL_ATTACKS = True

# Telegram –∞–¥–º—ñ–Ω—Å—å–∫–∏–π —á–∞—Ç –¥–ª—è security –∞–ª–µ—Ä—Ç—ñ–≤
TELEGRAM_ADMIN_CHAT_ID = config('TELEGRAM_ADMIN_CHAT_ID', default=None)

# Cloudflare settings (–¥–ª—è production)
USE_X_FORWARDED_HOST = True
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')

# Cloudflare IP ranges (–¥–ª—è trusted proxies) - –ø–æ–≤–Ω–∏–π —Å–ø–∏—Å–æ–∫
CLOUDFLARE_IPS = [
    '173.245.48.0/20',
    '103.21.244.0/22',
    '103.22.200.0/22',
    '103.31.4.0/22',
    '141.101.64.0/18',
    '108.162.192.0/18',
    '190.93.240.0/20',
    '188.114.96.0/20',
    '197.234.240.0/22',
    '198.41.128.0/17',
    '162.158.0.0/15',
    '104.16.0.0/13',
    '104.24.0.0/14',
    '172.64.0.0/13',
    '131.0.72.0/22',
    '104.28.0.0/16',
    '104.29.0.0/16',
    '104.30.0.0/16',
    '104.31.0.0/16',
    '108.162.224.0/19',
    '108.162.240.0/20',
    '108.162.248.0/21',
    '108.162.252.0/22',
    '108.162.254.0/23',
    '108.162.255.0/24',
    '141.101.64.0/18',
    '141.101.80.0/20',
    '141.101.96.0/19',
    '141.101.112.0/20',
    '141.101.128.0/17',
    '141.101.192.0/18',
    '141.101.224.0/19',
    '141.101.240.0/20',
    '141.101.248.0/21',
    '141.101.252.0/22',
    '141.101.254.0/23',
    '141.101.255.0/24',
    '162.158.0.0/15',
    '162.159.0.0/16',
    '162.160.0.0/15',
    '162.162.0.0/16',
    '162.163.0.0/16',
    '162.164.0.0/16',
    '162.165.0.0/16',
    '162.166.0.0/16',
    '162.167.0.0/16',
    '162.168.0.0/16',
    '162.169.0.0/16',
    '162.170.0.0/16',
    '162.171.0.0/16',
    '162.172.0.0/16',
    '162.173.0.0/16',
    '162.174.0.0/16',
    '162.175.0.0/16',
    '162.176.0.0/16',
    '162.177.0.0/16',
    '162.178.0.0/16',
    '162.179.0.0/16',
    '162.180.0.0/16',
    '162.181.0.0/16',
    '162.182.0.0/16',
    '162.183.0.0/16',
    '162.184.0.0/16',
    '162.185.0.0/16',
    '162.186.0.0/16',
    '162.187.0.0/16',
    '162.188.0.0/16',
    '162.189.0.0/16',
    '162.190.0.0/16',
    '162.191.0.0/16',
    '162.192.0.0/16',
    '162.193.0.0/16',
    '162.194.0.0/16',
    '162.195.0.0/16',
    '162.196.0.0/16',
    '162.197.0.0/16',
    '162.198.0.0/16',
    '162.199.0.0/16',
    '162.200.0.0/16',
    '162.201.0.0/16',
    '162.202.0.0/16',
    '162.203.0.0/16',
    '162.204.0.0/16',
    '162.205.0.0/16',
    '162.206.0.0/16',
    '162.207.0.0/16',
    '162.208.0.0/16',
    '162.209.0.0/16',
    '162.210.0.0/16',
    '162.211.0.0/16',
    '162.212.0.0/16',
    '162.213.0.0/16',
    '162.214.0.0/16',
    '162.215.0.0/16',
    '162.216.0.0/16',
    '162.217.0.0/16',
    '162.218.0.0/16',
    '162.219.0.0/16',
    '162.220.0.0/16',
    '162.221.0.0/16',
    '162.222.0.0/16',
    '162.223.0.0/16',
    '162.224.0.0/16',
    '162.225.0.0/16',
    '162.226.0.0/16',
    '162.227.0.0/16',
    '162.228.0.0/16',
    '162.229.0.0/16',
    '162.230.0.0/16',
    '162.231.0.0/16',
    '162.232.0.0/16',
    '162.233.0.0/16',
    '162.234.0.0/16',
    '162.235.0.0/16',
    '162.236.0.0/16',
    '162.237.0.0/16',
    '162.238.0.0/16',
    '162.239.0.0/16',
    '162.240.0.0/16',
    '162.241.0.0/16',
    '162.242.0.0/16',
    '162.243.0.0/16',
    '162.244.0.0/16',
    '162.245.0.0/16',
    '162.246.0.0/16',
    '162.247.0.0/16',
    '162.248.0.0/16',
    '162.249.0.0/16',
    '162.250.0.0/16',
    '162.251.0.0/16',
    '162.252.0.0/16',
    '162.253.0.0/16',
    '162.254.0.0/16',
    '162.255.0.0/16',
]

# Cloudflare API –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
CLOUDFLARE_API_TOKEN = config('CLOUDFLARE_API_TOKEN', default=None)
CLOUDFLARE_ZONE_ID = config('CLOUDFLARE_ZONE_ID', default=None)
CLOUDFLARE_EMAIL = config('CLOUDFLARE_EMAIL', default=None)

# === üìã ASANA INTEGRATION ===
ASANA_TOKEN = config('ASANA_TOKEN', default=None)
ASANA_WORKSPACE_ID = config('ASANA_WORKSPACE_ID', default=None)
ASANA_PROJECT_ID = config('ASANA_PROJECT_ID', default=None)

# === üí∞ AI COST SETTINGS ===
AI_MANUAL_COST_PER_ARTICLE = float(os.getenv("AI_MANUAL_COST_PER_ARTICLE", 19))

# Security logging
LOGGING['loggers']['security'] = {
    'handlers': ['file'],
    'level': 'WARNING',
    'propagate': True,
}

# === üéØ CRM SETTINGS ===
CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"
CRISPY_TEMPLATE_PACK = "bootstrap5"

# Select2 settings
SELECT2_CACHE_BACKEND = "default"