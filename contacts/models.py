from django.db import models
from ckeditor.fields import RichTextField
from django.utils.translation import get_language
from django.contrib.auth.models import User

class Contact(models.Model):
    """–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –∫–æ–º–ø–∞–Ω—ñ—ó"""
    
    # –û—Å–Ω–æ–≤–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è
    title_en = models.CharField(max_length=255, default="Contact Us")
    title_uk = models.CharField(max_length=255, default="–ó–≤'—è–∑–∞—Ç–∏—Å—è –∑ –Ω–∞–º–∏")
    title_pl = models.CharField(max_length=255, default="Skontaktuj siƒô z nami")
    
    # –û–ø–∏—Å
    description_en = RichTextField(blank=True, null=True)
    description_uk = RichTextField(blank=True, null=True)
    description_pl = RichTextField(blank=True, null=True)
    
    # –ö–æ–Ω—Ç–∞–∫—Ç–Ω—ñ –¥–∞–Ω—ñ
    email = models.EmailField(default="hello@lazysoft.dev")
    phone = models.CharField(max_length=50, default="+48 727 842 737")
    
    # –ê–¥—Ä–µ—Å–∞ (–°–ü–†–û–©–ï–ù–ê)
    address_line_1_en = models.CharField(max_length=255, default="EU R&D Centre")
    address_line_1_uk = models.CharField(max_length=255, default="–¶–µ–Ω—Ç—Ä –¥–æ—Å–ª—ñ–¥–∂–µ–Ω—å –Ñ–°")
    address_line_1_pl = models.CharField(max_length=255, default="Centrum Badawcze UE")
    
    # –í–ò–î–ê–õ–Ø–Ñ–ú–û address_line_2 —Ç–∞ address_line_3
    city = models.CharField(max_length=100, default="Wroc≈Çaw")
    postal_code = models.CharField(max_length=20, default="51-664")
    country_en = models.CharField(max_length=100, default="Poland")
    country_uk = models.CharField(max_length=100, default="–ü–æ–ª—å—â–∞") 
    country_pl = models.CharField(max_length=100, default="Polska")
    
    # Google Maps
    google_maps_url = models.URLField(
        blank=True, 
        null=True,
        default="https://maps.google.com/maps?q=Wroc≈Çaw,+Poland",
        help_text="–ü–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ Google Maps"
    )
    
    # –§–æ—Ç–æ –æ—Ñ—ñ—Å—É (–æ—Å–Ω–æ–≤–Ω–µ)
    office_photo = models.ImageField(upload_to="contacts/office/", blank=True, null=True)
    
    # –¢–µ–∫—Å—Ç –¥–ª—è Hero —Ñ–æ—Ç–æ —Å–µ–∫—Ü—ñ—ó
    hero_title_en = models.CharField(max_length=255, default="Our Space for Innovation")
    hero_title_uk = models.CharField(max_length=255, default="–ù–∞—à –ø—Ä–æ—Å—Ç—ñ—Ä –¥–ª—è —ñ–Ω–Ω–æ–≤–∞—Ü—ñ–π")
    hero_title_pl = models.CharField(max_length=255, default="Nasza przestrze≈Ñ do innowacji")
    
    hero_description_en = models.TextField(default="Modern office where ideas are born and the most ambitious projects come to life. Here we create the future together with our clients.")
    hero_description_uk = models.TextField(default="–°—É—á–∞—Å–Ω–∏–π –æ—Ñ—ñ—Å, –¥–µ –Ω–∞—Ä–æ–¥–∂—É—é—Ç—å—Å—è —ñ–¥–µ—ó —Ç–∞ –≤—Ç—ñ–ª—é—é—Ç—å—Å—è –Ω–∞–π—Å–º—ñ–ª–∏–≤—ñ—à—ñ –ø—Ä–æ—î–∫—Ç–∏. –¢—É—Ç –º–∏ —Å—Ç–≤–æ—Ä—é—î–º–æ –º–∞–π–±—É—Ç–Ω—î —Ä–∞–∑–æ–º –∑ –Ω–∞—à–∏–º–∏ –∫–ª—ñ—î–Ω—Ç–∞–º–∏.")
    hero_description_pl = models.TextField(default="Nowoczesne biuro, gdzie rodzƒÖ siƒô pomys≈Çy i realizowane sƒÖ najbardziej ≈õmia≈Çe projekty. Tutaj tworzymy przysz≈Ço≈õƒá razem z naszymi klientami.")



    # –î–æ–¥–∞—Ç–∫–æ–≤–µ –≥–æ–ª–æ–≤–Ω–µ —Ñ–æ—Ç–æ –¥–ª—è Hero —Å–µ–∫—Ü—ñ—ó
    hero_photo = models.ImageField(
        upload_to="contacts/hero/", 
        blank=True, 
        null=True,
        help_text="–ì–æ–ª–æ–≤–Ω–µ —Ñ–æ—Ç–æ –¥–ª—è Hero —Å–µ–∫—Ü—ñ—ó"
    )
    
    # –°—Ç–∞—Ç—É—Å
    is_active = models.BooleanField(default=True)
    
    # SEO
    seo_title_en = models.CharField(max_length=255, blank=True)
    seo_title_uk = models.CharField(max_length=255, blank=True)
    seo_title_pl = models.CharField(max_length=255, blank=True)
    
    seo_description_en = models.TextField(max_length=300, blank=True)
    seo_description_uk = models.TextField(max_length=300, blank=True)
    seo_description_pl = models.TextField(max_length=300, blank=True)
    
    class Meta:
        verbose_name = "Contact Information"
        verbose_name_plural = "Contact Information"
    
    def __str__(self):
        return f"Contact Info ({self.email})"
    
    # üîß –ú–ï–¢–û–î–ò –î–õ–Ø –ë–ê–ì–ê–¢–û–ú–û–í–ù–û–°–¢–Ü
    def get_title(self):
        """–û—Ç—Ä–∏–º–∞—Ç–∏ –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∑–≥—ñ–¥–Ω–æ –ø–æ—Ç–æ—á–Ω–æ—ó –º–æ–≤–∏"""
        lang = get_language()
        if lang == 'uk':
            return self.title_uk
        elif lang == 'pl':
            return self.title_pl
        else:
            return self.title_en
    
    def get_description(self):
        """–û—Ç—Ä–∏–º–∞—Ç–∏ –æ–ø–∏—Å –∑–≥—ñ–¥–Ω–æ –ø–æ—Ç–æ—á–Ω–æ—ó –º–æ–≤–∏"""
        lang = get_language()
        if lang == 'uk':
            return self.description_uk
        elif lang == 'pl':
            return self.description_pl
        else:
            return self.description_en
    
    def get_address_line_1(self):
        """–û—Ç—Ä–∏–º–∞—Ç–∏ –ø–µ—Ä—à—É –ª—ñ–Ω—ñ—é –∞–¥—Ä–µ—Å–∏ –∑–≥—ñ–¥–Ω–æ –ø–æ—Ç–æ—á–Ω–æ—ó –º–æ–≤–∏"""
        lang = get_language()
        if lang == 'uk':
            return self.address_line_1_uk
        elif lang == 'pl':
            return self.address_line_1_pl
        else:
            return self.address_line_1_en
    
    def get_country(self):
        """–û—Ç—Ä–∏–º–∞—Ç–∏ –∫—Ä–∞—ó–Ω—É –∑–≥—ñ–¥–Ω–æ –ø–æ—Ç–æ—á–Ω–æ—ó –º–æ–≤–∏"""
        lang = get_language()
        if lang == 'uk':
            return self.country_uk
        elif lang == 'pl':
            return self.country_pl
        else:
            return self.country_en
    
    def get_country_code(self):
        """–û—Ç—Ä–∏–º–∞—Ç–∏ –∫–æ–¥ –∫—Ä–∞—ó–Ω–∏"""
        return "PL"  # –¢–µ–ø–µ—Ä –∑–∞–≤–∂–¥–∏ –ü–æ–ª—å—â–∞
    
    def get_seo_title(self):
        """SEO –∑–∞–≥–æ–ª–æ–≤–æ–∫"""
        lang = get_language()
        if lang == 'uk':
            return self.seo_title_uk or self.title_uk
        elif lang == 'pl':
            return self.seo_title_pl or self.title_pl
        else:
            return self.seo_title_en or self.title_en
    
    def get_seo_description(self):
        """SEO –æ–ø–∏—Å"""
        lang = get_language()
        if lang == 'uk':
            return self.seo_description_uk
        elif lang == 'pl':
            return self.seo_description_pl
        else:
            return self.seo_description_en


class ContactSubmission(models.Model):
    """–§–æ—Ä–º–∞ –∑–≤–æ—Ä–æ—Ç–Ω–æ–≥–æ –∑–≤'—è–∑–∫—É"""
    
    # –î–∞–Ω—ñ –≤—ñ–¥–ø—Ä–∞–≤–Ω–∏–∫–∞
    name = models.CharField(max_length=255)
    email = models.EmailField()
    phone = models.CharField(max_length=50, blank=True, null=True)
    company = models.CharField(max_length=255, blank=True, null=True)
    subject = models.CharField(max_length=255)
    message = models.TextField()
    
    # –ó —è–∫–æ—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏ –ø—Ä–∏–π—à–æ–≤
    referred_from = models.CharField(
        max_length=50, 
        blank=True, 
        null=True,
        help_text="–ù–∞–ø—Ä–∏–∫–ª–∞–¥: service_ai_automation, project_chatbot_analytics"
    )
    
    # –ú–µ—Ç–∞ –¥–∞–Ω—ñ
    created_at = models.DateTimeField(auto_now_add=True)
    ip_address = models.GenericIPAddressField(blank=True, null=True)
    user_agent = models.TextField(blank=True, null=True)
    
    # –°—Ç–∞—Ç—É—Å –æ–±—Ä–æ–±–∫–∏  
    is_processed = models.BooleanField(default=False)
    admin_notes = models.TextField(blank=True, null=True)
    
    # ‚ö° CRM –ü–û–õ–Ø - –î–û–î–ê–Ñ–ú–û –ù–û–í–Ü:
    
    # CRM —Å—Ç–∞—Ç—É—Å–∏
    status = models.CharField(
        max_length=20,
        choices=[
            ('new', '–ù–æ–≤–∏–π –ª—ñ–¥'),
            ('contacted', '–ó–≤\'—è–∑–∞–ª–∏—Å—å'),
            ('qualified', '–ö–≤–∞–ª—ñ—Ñ—ñ–∫–æ–≤–∞–Ω–∏–π'),
            ('proposal_sent', '–í—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—é'),
            ('negotiation', '–ü–µ—Ä–µ–≥–æ–≤–æ—Ä–∏'),
            ('closed_won', '–ó–∞–∫—Ä–∏—Ç–æ —É—Å–ø—ñ—à–Ω–æ'),
            ('closed_lost', '–ó–∞–∫—Ä–∏—Ç–æ –Ω–µ—É—Å–ø—ñ—à–Ω–æ'),
        ],
        default='new',
        verbose_name='–°—Ç–∞—Ç—É—Å'
    )
    
    # –ü—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞
    assigned_to = models.ForeignKey(
        User, 
        on_delete=models.SET_NULL, 
        null=True, blank=True,
        verbose_name="–ü—Ä–∏–∑–Ω–∞—á–µ–Ω–æ –º–µ–Ω–µ–¥–∂–µ—Ä—É",
        related_name='assigned_leads'
    )
    
    # –û—Ü—ñ–Ω–∫–∞ —Ç–∞ –±—é–¥–∂–µ—Ç
    lead_score = models.IntegerField(
        default=0, 
        help_text="–û—Ü—ñ–Ω–∫–∞ –ª—ñ–¥–∞ 0-100",
        verbose_name='–û—Ü—ñ–Ω–∫–∞ –ª—ñ–¥–∞'
    )
    
    estimated_budget = models.DecimalField(
        max_digits=10, 
        decimal_places=2, 
        null=True, blank=True,
        verbose_name='–û—á—ñ–∫—É–≤–∞–Ω–∏–π –±—é–¥–∂–µ—Ç'
    )
    
    expected_close_date = models.DateField(
        null=True, blank=True,
        verbose_name='–û—á—ñ–∫—É–≤–∞–Ω–∞ –¥–∞—Ç–∞ –∑–∞–∫—Ä–∏—Ç—Ç—è'
    )
    
    # –í—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ
    last_contact_date = models.DateTimeField(
        null=True, blank=True,
        verbose_name='–û—Å—Ç–∞–Ω–Ω—è –≤–∑–∞—î–º–æ–¥—ñ—è'
    )
    
    next_follow_up = models.DateTimeField(
        null=True, blank=True,
        verbose_name='–ù–∞—Å—Ç—É–ø–Ω–∏–π follow-up'
    )
    
    # –î–∂–µ—Ä–µ–ª–æ –ª—ñ–¥–∞ (—Ä–æ–∑—à–∏—Ä—é—î–º–æ referred_from)
    lead_source = models.CharField(
        max_length=50,
        choices=[
            ('website', '–°–∞–π—Ç'),
            ('social_media', '–°–æ—Ü—ñ–∞–ª—å–Ω—ñ –º–µ—Ä–µ–∂—ñ'),
            ('referral', '–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—è'),
            ('advertising', '–†–µ–∫–ª–∞–º–∞'),
            ('cold_outreach', '–•–æ–ª–æ–¥–Ω—ñ –¥–∑–≤—ñ–Ω–∫–∏'),
            ('other', '–Ü–Ω—à–µ'),
        ],
        default='website',
        verbose_name='–î–∂–µ—Ä–µ–ª–æ –ª—ñ–¥–∞'
    )
    
    class Meta:
        verbose_name = "–õ—ñ–¥/–ó–∞—è–≤–∫–∞"
        verbose_name_plural = "–õ—ñ–¥–∏/–ó–∞—è–≤–∫–∏"
        ordering = ['-created_at']
    
    def __str__(self):
        return f"Contact from {self.name} - {self.subject}"