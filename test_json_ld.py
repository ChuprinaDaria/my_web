#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤–∏–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ JSON-LD templatetag
"""

import os
import sys
import django

# –î–æ–¥–∞—î–º–æ —à–ª—è—Ö –¥–æ –ø—Ä–æ—î–∫—Ç—É
sys.path.append('/home/dchuprina/Desktop/Lazysoft')

# –ù–∞–ª–∞—à—Ç–æ–≤—É—î–º–æ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'lazysoft.settings')
django.setup()

from news.templatetags.seo_tags import news_json_ld
from news.models import ProcessedArticle
from django.template import Context, Template

def test_json_ld():
    """–¢–µ—Å—Ç—É—î–º–æ JSON-LD templatetag"""
    print("üß™ –¢–µ—Å—Ç—É—î–º–æ JSON-LD templatetag...")
    
    try:
        # –û—Ç—Ä–∏–º—É—î–º–æ –ø–µ—Ä—à—É —Å—Ç–∞—Ç—Ç—é
        article = ProcessedArticle.objects.first()
        
        if not article:
            print("‚ùå –ù–µ–º–∞—î —Å—Ç–∞—Ç–µ–π –≤ –±–∞–∑—ñ –¥–∞–Ω–∏—Ö")
            return
        
        print(f"‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ —Å—Ç–∞—Ç—Ç—é: {article.get_title('uk')}")
        
        # –°—Ç–≤–æ—Ä—é—î–º–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç
        context = Context({
            'request': None,
            'article': article
        })
        
        # –¢–µ—Å—Ç—É—î–º–æ templatetag
        result = news_json_ld(context, article)
        
        print("‚úÖ JSON-LD –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–æ —É—Å–ø—ñ—à–Ω–æ!")
        print(f"üìÑ –†–æ–∑–º—ñ—Ä JSON: {len(result['schema_json'])} —Å–∏–º–≤–æ–ª—ñ–≤")
        
        # –ü–æ–∫–∞–∑—É—î–º–æ –ø—Ä–µ–≤'—é JSON
        json_preview = result['schema_json'][:500] + "..." if len(result['schema_json']) > 500 else result['schema_json']
        print(f"\nüìã –ü—Ä–µ–≤'—é JSON-LD:")
        print(json_preview)
        
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –∫–ª—é—á–æ–≤–∏—Ö –ø–æ–ª—ñ–≤
        json_str = result['schema_json']
        required_fields = [
            '@context',
            '@type',
            'headline',
            'datePublished',
            'author',
            'publisher'
        ]
        
        missing_fields = []
        for field in required_fields:
            if field not in json_str:
                missing_fields.append(field)
        
        if missing_fields:
            print(f"‚ùå –í—ñ–¥—Å—É—Ç–Ω—ñ –ø–æ–ª—è: {', '.join(missing_fields)}")
        else:
            print("‚úÖ –í—Å—ñ –æ–±–æ–≤'—è–∑–∫–æ–≤—ñ –ø–æ–ª—è –ø—Ä–∏—Å—É—Ç–Ω—ñ")
            
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –ª–æ–≥–æ—Ç–∏–ø
        if 'logo.svg' in json_str:
            print("‚úÖ –õ–æ–≥–æ—Ç–∏–ø –ø—Ä–∞–≤–∏–ª—å–Ω–æ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–∏–π")
        else:
            print("‚ùå –õ–æ–≥–æ—Ç–∏–ø –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –≤ JSON")
            
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    test_json_ld()
