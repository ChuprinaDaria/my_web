// ===============================================
// üî• –ü–†–û–°–¢–ò–ô JS –î–õ–Ø –°–ï–†–í–Ü–°–Ü–í - –ë–ï–ó –ö–ê–†–£–°–ï–õ–Ü
// ===============================================

console.log('üî• Simple Services JS file loaded');

document.addEventListener('DOMContentLoaded', function() {
  
  // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è Lucide —ñ–∫–æ–Ω–æ–∫
  if (typeof lucide !== 'undefined') {
    lucide.createIcons();
  }
  
  // –û—Ç—Ä–∏–º—É—î–º–æ –≤—Å—ñ –µ–ª–µ–º–µ–Ω—Ç–∏ —Å–µ—Ä–≤—ñ—Å—ñ–≤
  const serviceItems = document.querySelectorAll('.service-horizontal-item');
  
  serviceItems.forEach(function(item) {
    const accordion = item.querySelector('.service-description-accordion');
    const serviceSlug = item.getAttribute('data-service-id');
    const titleElement = item.querySelector('.service-title');
    const arrowElement = item.querySelector('.accordion-arrow');
    const serviceUrl = item.getAttribute('data-service-url');
    
    if (!accordion) return;
    
    // –ö–õ–Ü–ö –ù–ê –ó–ê–ì–û–õ–û–í–û–ö - –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç—å –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É —Å–µ—Ä–≤—ñ—Å—É
    if (titleElement) {
      titleElement.addEventListener('click', function(e) {
        e.preventDefault();
        e.stopPropagation();
        
        if (serviceUrl) {
          window.location.href = serviceUrl;
        }
      });
    }
    
    // –ö–õ–Ü–ö –ù–ê –°–¢–†–Ü–õ–û–ß–ö–£ - –≤—ñ–¥–∫—Ä–∏–≤–∞—î/–∑–∞–∫—Ä–∏–≤–∞—î –∞–∫–æ—Ä–¥–µ–æ–Ω
    if (arrowElement) {
      arrowElement.addEventListener('click', function(e) {
        e.preventDefault();
        e.stopPropagation();
        console.log('Arrow clicked');
        toggleAccordion(accordion);
      });
    } else {
      console.log('Arrow element not found');
    }
    
    // –ö–õ–Ü–ö –ù–ê –ö–ê–†–¢–ö–£ - –≤—ñ–¥–∫—Ä–∏–≤–∞—î/–∑–∞–∫—Ä–∏–≤–∞—î –∞–∫–æ—Ä–¥–µ–æ–Ω (—Ç—ñ–ª—å–∫–∏ —è–∫—â–æ –Ω–µ –∫–ª—ñ–∫–Ω—É–ª–∏ –Ω–∞ –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∞–±–æ —Å—Ç—Ä—ñ–ª–æ—á–∫—É)
    item.addEventListener('click', function(e) {
      console.log('Card clicked, target:', e.target);
      
      // –Ø–∫—â–æ –∫–ª—ñ–∫–Ω—É–ª–∏ –Ω–∞ –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∞–±–æ —Å—Ç—Ä—ñ–ª–æ—á–∫—É, –Ω–µ –æ–±—Ä–æ–±–ª—è—î–º–æ
      if (e.target === titleElement || titleElement.contains(e.target) || 
          e.target === arrowElement || arrowElement.contains(e.target)) {
        console.log('Clicked on title or arrow, ignoring');
        return;
      }
      
      e.preventDefault();
      e.stopPropagation();
      
      console.log('Processing card click');
      
      // –ù–µ–≤–µ–ª–∏–∫–∞ –∑–∞—Ç—Ä–∏–º–∫–∞ –¥–ª—è —Ä–æ–∑—Ä—ñ–∑–Ω–µ–Ω–Ω—è –æ–¥–∏–Ω–∞—Ä–Ω–æ–≥–æ —Ç–∞ –ø–æ–¥–≤—ñ–π–Ω–æ–≥–æ –∫–ª—ñ–∫—É
      setTimeout(() => {
        if (!item.dataset.doubleClick) {
          console.log('Single click - toggling accordion');
          toggleAccordion(accordion);
        }
        delete item.dataset.doubleClick;
      }, 200);
    });
    
    // –ü–û–î–í–Ü–ô–ù–ò–ô –ö–õ–Ü–ö - –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç—å –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É —Å–µ—Ä–≤—ñ—Å—É
    item.addEventListener('dblclick', function(e) {
      e.preventDefault();
      e.stopPropagation();
      item.dataset.doubleClick = 'true';
      
      if (serviceUrl) {
        window.location.href = serviceUrl;
      } else if (serviceSlug) {
        // Fallback - –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –ø–æ—Ç–æ—á–Ω–∏–π URL –∑ –¥–æ–¥–∞–≤–∞–Ω–Ω—è–º slug
        const currentPath = window.location.pathname;
        const basePath = currentPath.replace(/\/$/, '');
        window.location.href = `${basePath}/${serviceSlug}/`;
      }
    });
    
    // ENTER –Ω–∞ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—ñ
    item.addEventListener('keydown', function(e) {
      if (e.key === 'Enter') {
        e.preventDefault();
        toggleAccordion(accordion);
      }
      
      // SPACE - —Ç–µ–∂ –≤—ñ–¥–∫—Ä–∏–≤–∞—î –∞–∫–æ—Ä–¥–µ–æ–Ω
      if (e.key === ' ') {
        e.preventDefault();
        toggleAccordion(accordion);
      }
    });
    
    // –†–æ–±–∏–º–æ –µ–ª–µ–º–µ–Ω—Ç —Ñ–æ–∫—É—Å–æ–≤–∞–Ω–∏–º
    item.setAttribute('tabindex', '0');
    item.setAttribute('role', 'button');
    item.setAttribute('aria-expanded', 'false');
  });
  
  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è/–∑–∞–∫—Ä–∏—Ç—Ç—è –∞–∫–æ—Ä–¥–µ–æ–Ω—É
  function toggleAccordion(accordion) {
    const isOpen = accordion.classList.contains('open');
    const serviceItem = accordion.closest('.service-horizontal-item');
    
    console.log('Toggle accordion:', isOpen ? 'closing' : 'opening');
    
    if (isOpen) {
      // –ó–∞–∫—Ä–∏–≤–∞—î–º–æ
      accordion.style.display = 'none';
      accordion.classList.remove('open');
      serviceItem.setAttribute('aria-expanded', 'false');
    } else {
      // –í—ñ–¥–∫—Ä–∏–≤–∞—î–º–æ
      accordion.style.display = 'block';
      accordion.classList.add('open');
      serviceItem.setAttribute('aria-expanded', 'true');
    }
  }
  
  // –ó–∞–∫—Ä–∏–≤–∞—î–º–æ –≤—Å—ñ –∞–∫–æ—Ä–¥–µ–æ–Ω–∏ –ø—Ä–∏ –∫–ª—ñ–∫—É –ø–æ–∑–∞ –Ω–∏–º–∏
  document.addEventListener('click', function(e) {
    if (!e.target.closest('.service-horizontal-item')) {
      closeAllAccordions();
    }
  });
  
  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–∞–∫—Ä–∏—Ç—Ç—è –≤—Å—ñ—Ö –∞–∫–æ—Ä–¥–µ–æ–Ω—ñ–≤
  function closeAllAccordions() {
    const openAccordions = document.querySelectorAll('.service-description-accordion.open');
    openAccordions.forEach(function(accordion) {
      accordion.style.display = 'none';
      accordion.classList.remove('open');
      const serviceItem = accordion.closest('.service-horizontal-item');
      serviceItem.setAttribute('aria-expanded', 'false');
    });
  }
  
  // ESC –∑–∞–∫—Ä–∏–≤–∞—î –≤—Å—ñ –∞–∫–æ—Ä–¥–µ–æ–Ω–∏
  document.addEventListener('keydown', function(e) {
    if (e.key === 'Escape') {
      closeAllAccordions();
    }
  });
  
  console.log('üî• Simple Services JS initialized');
  console.log('Found service items:', serviceItems.length);
});
