from django.core.management.base import BaseCommand
from core.services.cloudflare_api import CloudflareAPI

class Command(BaseCommand):
    help = 'Emergency –∑–∞—Ö–∏—Å—Ç —á–µ—Ä–µ–∑ Cloudflare'
    
    def add_arguments(self, parser):
        parser.add_argument('--action', type=str, choices=['under_attack', 'normal', 'block_ip', 'challenge_ip'], 
                          help='–î—ñ—è –¥–ª—è –≤–∏–∫–æ–Ω–∞–Ω–Ω—è')
        parser.add_argument('--ip', type=str, help='IP –∞–¥—Ä–µ—Å–∞ –¥–ª—è –±–ª–æ–∫—É–≤–∞–Ω–Ω—è/challenge')
        parser.add_argument('--reason', type=str, default='Emergency protection', help='–ü—Ä–∏—á–∏–Ω–∞ –±–ª–æ–∫—É–≤–∞–Ω–Ω—è')
    
    def handle(self, *args, **options):
        action = options['action']
        cf = CloudflareAPI()
        
        if action == 'under_attack':
            if cf.enable_under_attack_mode():
                self.stdout.write(self.style.SUCCESS('üö® UNDER ATTACK MODE ENABLED'))
            else:
                self.stdout.write(self.style.ERROR('‚ùå Failed to enable Under Attack Mode'))
                
        elif action == 'normal':
            if cf.disable_under_attack_mode():
                self.stdout.write(self.style.SUCCESS('‚úÖ Security level set to Normal'))
            else:
                self.stdout.write(self.style.ERROR('‚ùå Failed to disable Under Attack Mode'))
                
        elif action == 'block_ip':
            ip = options['ip']
            reason = options['reason']
            if ip and cf.block_ip(ip, reason):
                self.stdout.write(self.style.SUCCESS(f'üö´ IP {ip} blocked: {reason}'))
            else:
                self.stdout.write(self.style.ERROR('‚ùå Failed to block IP'))
                
        elif action == 'challenge_ip':
            ip = options['ip']
            reason = options['reason']
            if ip and cf.challenge_ip(ip, reason):
                self.stdout.write(self.style.SUCCESS(f'ü§ñ IP {ip} challenged: {reason}'))
            else:
                self.stdout.write(self.style.ERROR('‚ùå Failed to challenge IP'))
        else:
            self.stdout.write(self.style.ERROR('‚ùå Invalid action specified'))
