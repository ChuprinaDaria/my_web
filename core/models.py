# core/models.py
from django.db import models
from django.utils.text import slugify

class HomeHero(models.Model):
    """–†–µ–¥–∞–≥–æ–≤–∞–Ω–∏–π —á–µ—Ä–µ–∑ –∞–¥–º—ñ–Ω–∫—É –≥–µ—Ä–æ–π-–±–ª–æ–∫ –≥–æ–ª–æ–≤–Ω–æ—ó (–±–∞–≥–∞—Ç–æ–º–æ–≤–Ω–∏–π –≤ –ø–æ–ª—è—Ö)."""
    is_active = models.BooleanField(default=True)

    heading_en = models.CharField(max_length=200, blank=True)
    heading_uk = models.CharField(max_length=200, blank=True)
    heading_pl = models.CharField(max_length=200, blank=True)

    subheading_en = models.CharField(max_length=300, blank=True)
    subheading_uk = models.CharField(max_length=300, blank=True)
    subheading_pl = models.CharField(max_length=300, blank=True)

    description_en = models.TextField(blank=True)
    description_uk = models.TextField(blank=True)
    description_pl = models.TextField(blank=True)

    cta_primary_label_en = models.CharField(max_length=120, blank=True)
    cta_primary_label_uk = models.CharField(max_length=120, blank=True)
    cta_primary_label_pl = models.CharField(max_length=120, blank=True)
    cta_primary_url = models.URLField(blank=True, help_text="–Ø–∫—â–æ –ø—É—Å—Ç–æ ‚Äì –≤—ñ–¥–∫—Ä–∏–≤–∞—î –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ")

    cta_secondary_label_en = models.CharField(max_length=120, blank=True)
    cta_secondary_label_uk = models.CharField(max_length=120, blank=True)
    cta_secondary_label_pl = models.CharField(max_length=120, blank=True)
    cta_secondary_url = models.URLField(blank=True)

    updated_at = models.DateTimeField(auto_now=True)

    class Meta:
        verbose_name = "Home hero"
        verbose_name_plural = "Home heroes"

    def __str__(self):
        return self.heading_en or self.heading_uk or self.heading_pl or "Home hero"

class Tag(models.Model):
    """–£–Ω—ñ–≤–µ—Ä—Å–∞–ª—å–Ω—ñ —Ç–µ–≥–∏ –¥–ª—è –≤—Å—ñ—Ö —Å—É—Ç–Ω–æ—Å—Ç–µ–π: –Ω–æ–≤–∏–Ω–∏, –ø—Ä–æ—î–∫—Ç–∏, —Å–µ—Ä–≤—ñ—Å–∏"""
    
    # –û—Å–Ω–æ–≤–Ω—ñ –ø–æ–ª—è
    name = models.CharField(max_length=50, unique=True)
    slug = models.SlugField(unique=True, blank=True)
    
    # –ë–∞–≥–∞—Ç–æ–º–æ–≤–Ω—ñ—Å—Ç—å
    name_en = models.CharField(max_length=50, blank=True, help_text="English name")
    name_uk = models.CharField(max_length=50, blank=True, help_text="–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞ –Ω–∞–∑–≤–∞") 
    name_pl = models.CharField(max_length=50, blank=True, help_text="Polska nazwa")
    
    # –í—ñ–∑—É–∞–ª—å–Ω—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
    color = models.CharField(
        max_length=7, 
        default='#007bff',
        help_text="Hex color –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Ç–µ–≥—É"
    )
    icon = models.CharField(
        max_length=50, 
        blank=True,
        help_text="CSS class –∞–±–æ emoji –¥–ª—è —ñ–∫–æ–Ω–∫–∏"
    )
    
    # –ö–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü—ñ—è —Ç–µ–≥—ñ–≤
    TAG_CATEGORY_CHOICES = [
        ('technology', 'üíª Technology'),
        ('industry', 'üè≠ Industry'), 
        ('service', 'üîß Service Type'),
        ('ai', 'ü§ñ AI & ML'),
        ('business', 'üíº Business'),
        ('development', '‚ö° Development'),
    ]
    category = models.CharField(
        max_length=20,
        choices=TAG_CATEGORY_CHOICES,
        default='technology',
        help_text="–ö–∞—Ç–µ–≥–æ—Ä—ñ—è —Ç–µ–≥—É –¥–ª—è –≥—Ä—É–ø—É–≤–∞–Ω–Ω—è"
    )
    
    # –ú–µ—Ç–∞–¥–∞–Ω—ñ
    description = models.TextField(blank=True, help_text="–û–ø–∏—Å —Ç–µ–≥—É")
    is_active = models.BooleanField(default=True)
    is_featured = models.BooleanField(default=False, help_text="–ü–æ–∫–∞–∑—É–≤–∞—Ç–∏ –≤ —Ç–æ–ø—ñ")
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è  
    usage_count = models.PositiveIntegerField(default=0, help_text="–°–∫—ñ–ª—å–∫–∏ —Ä–∞–∑—ñ–≤ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è")
    
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)
    
    class Meta:
        verbose_name = "Tag"
        verbose_name_plural = "Tags"
        ordering = ['-is_featured', '-usage_count', 'name']
    
    def save(self, *args, **kwargs):
        if not self.slug:
            self.slug = slugify(self.name)
        super().save(*args, **kwargs)
    
    def __str__(self):
        return self.name
    
    def get_name(self, language='uk'):
        """–ü–æ–≤–µ—Ä—Ç–∞—î –Ω–∞–∑–≤—É —Ç–µ–≥—É –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ—ó –º–æ–≤–∏"""
        name_field = f'name_{language}'
        return getattr(self, name_field, '') or self.name
    
    def update_usage_count(self):
        """–û–Ω–æ–≤–ª—é—î –ª—ñ—á–∏–ª—å–Ω–∏–∫ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è"""
        from news.models import ProcessedArticle
        from projects.models import Project  
        from services.models import Service
        
        count = (
            self.articles.count() + 
            self.projects.count() + 
            self.services.count()
        )
        self.usage_count = count
        self.save(update_fields=['usage_count'])
    
    @classmethod
    def get_popular_tags(cls, limit=10):
        """–ü–æ–≤–µ—Ä—Ç–∞—î –ø–æ–ø—É–ª—è—Ä–Ω—ñ —Ç–µ–≥–∏"""
        return cls.objects.filter(
            is_active=True,
            usage_count__gt=0
        ).order_by('-usage_count')[:limit]
    
    @classmethod 
    def get_by_category(cls, category):
        """–ü–æ–≤–µ—Ä—Ç–∞—î —Ç–µ–≥–∏ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó"""
        return cls.objects.filter(
            category=category,
            is_active=True
        ).order_by('-usage_count')